source('~/MyProjects/BioMin_HIS/RAnalysis/Scripts/Apex_Data_Extract.R')
source('~/MyProjects/BioMin_HIS/RAnalysis/Scripts/Apex_Data_Extract.R')
source('~/MyProjects/BioMin_HIS/RAnalysis/Scripts/Apex_Data_Extract.R')
source('~/MyProjects/BioMin_HIS/RAnalysis/Scripts/Apex_Data_Extract.R')
source('~/MyProjects/BioMin_HIS/RAnalysis/Scripts/Apex_Data_Extract.R')
source('~/MyProjects/BioMin_HIS/RAnalysis/Scripts/Apex_Data_Extract.R')
source('~/MyProjects/BioMin_HIS/RAnalysis/Scripts/Apex_Data_Extract.R')
#plot Temp and pH and save to output
pdf("~/MyProjects/BioMin_HIS/RAnalysis/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_XL)) ~ Date.Time, Probe.Data, col = "grey", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_L)) ~ Date.Time, Probe.Data, col = "red")
lines(as.numeric(as.character(Tmp_A)) ~ Date.Time, Probe.Data, col = "blue")
axis.POSIXct(side=1, Probe.Data$Date.Time)
plot(as.numeric(as.character(pH_XL)) ~ Date.Time, Probe.Data, col = "grey", type="l", ylim=c(7.1, 8.1),  xlab="Time", ylab="pH NBS")
lines(as.numeric(as.character(pH_L)) ~ Date.Time, Probe.Data, col = "red")
lines(as.numeric(as.character(pH_A)) ~ Date.Time, Probe.Data, col = "blue")
axis.POSIXct(side=1, Probe.Data$Date.Time)
# plot(as.numeric(as.character(Salt_XL)) ~ Date.Time, Probe.Data, col = "grey", type="l", ylim=c(20, 35),  xlab="Time", ylab="Salinity psu")
# lines(as.numeric(as.character(Salt_L)) ~ Date.Time, Probe.Data, col = "red")
# lines(as.numeric(as.character(Salt_A)) ~ Date.Time, Probe.Data, col = "blue")
# axis.POSIXct(side=1, Probe.Data$Date.Time)
dev.off()
#HIMB_Bleaching_2018
# Plotting daily measurements, not including Apex data
rm(list=ls()) # removes all prior objects
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
##### DISCRETE pH CALCULATIONS #####
path <-("~/MyProjects/HIMB_Bleaching_2018/pH_Calibration_Files/")
file.names<-list.files(path = path, pattern = "csv$") #list all the file names in the folder to get only get the csv files
pH.cals <- data.frame(matrix(NA, nrow=length(file.names), ncol=3, dimnames=list(file.names,c("Date", "Intercept", "Slope")))) #generate a 3 column dataframe with specific column names
for(i in 1:length(file.names)) { # for every file in list start at the first and run this following function
Calib.Data <-read.table(file.path(path,file.names[i]), header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
file.names[i]
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
summary(model)$r.squared
plot(Calib.Data$mVTris, Calib.Data$TTris)
pH.cals[i,2:3] <- coe #inserts them in the dataframe
pH.cals[i,1] <- substr(file.names[i],1,8) #stores the file name in the Date column
}
colnames(pH.cals) <- c("Calib.Date",  "Intercept",  "Slope") #rename columns
pH.cals #view data
#constants for use in pH calculation
R <- 8.31447215 #gas constant in J mol-1 K-1
F <-96485.339924 #Faraday constant in coulombs mol-1
#read in probe measurements of pH, temperature, and salinity from tanks
daily <- read.csv("Daily_Temp_pH_Sal.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
#merge with Seawater chemistry file
SW.chem <- merge(pH.cals, daily, by="Calib.Date")
mvTris <- SW.chem$Temperature*SW.chem$Slope+SW.chem$Intercept #calculate the mV of the tris standard using the temperature mv relationships in the measured standard curves
STris<-35 #salinity of the Tris
phTris<- (11911.08-18.2499*STris-0.039336*STris^2)*(1/(SW.chem$Temperature+273.15))-366.27059+ 0.53993607*STris+0.00016329*STris^2+(64.52243-0.084041*STris)*log(SW.chem$Temperature+273.15)-0.11149858*(SW.chem$Temperature+273.15) #calculate the pH of the tris (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
SW.chem$pH.Total<-phTris+(mvTris/1000-SW.chem$pH.MV/1000)/(R*(SW.chem$Temperature+273.15)*log(10)/F) #calculate the pH on the total scale (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Treatment_Measures.pdf")
par(mfrow=c(3,2))
plot(SW.chem$Treatment, SW.chem$Temperature, xlab="Treatment", ylab="Temperature°C", ylim=c(23,33))
plot(SW.chem$Treatment, SW.chem$pH.Total, xlab="Treatment", ylab="pH Total Scale", ylim=c(7.0,8.2))
plot(SW.chem$Treatment, SW.chem$Salinity, xlab="Treatment", ylab="Salinity psu", ylim=c(30,37))
dev.off()
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Tank_Measures.pdf")
par(mfrow=c(1,3))
plot(SW.chem$Sample.ID, SW.chem$Temperature, xlab="Tank", ylab="Temperature°C", ylim=c(23,33),las=2)
plot(SW.chem$Sample.ID, SW.chem$pH.Total, xlab="Tank", ylab="pH Total Scale", ylim=c(7.0,8.2),las=2)
plot(SW.chem$Sample.ID, SW.chem$Salinity, xlab="Tank", ylab="Salinity psu", ylim=c(30,37),las=2)
dev.off()
View(daily)
#Title: Bleaching estimates from pictures
#Author: HM Putnam
#Date Last Modified: 20180807
#See Readme file for details
rm(list=ls()) #clears workspace
#Read in required libraries
##### Include Versions of libraries
library("vegan")
#Required Data files
# Set Working Directory:
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working
Data <- read.csv("Color_Score_Data.csv", header=T, sep=",", na.string="NA") #read in data fil
Data <- subset(Data, Date!="20180802")
# Data <- subset(Data, Treatment!="Ambient1")
#Data <- subset(Data, Side=="Front")
#Data <- subset(Data, Side=="Back")
Colors <- as.data.frame(aggregate(Red.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Red.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- Colors[,-c(4,5,7,8, 10,11,13,14,16,17)]
Colors$Group <- paste(Colors$TimePoint, Colors$Fragment.ID)
Colors$Red.Norm.Coral <- Colors$Red.Coral/Colors$Red.Standard #normalize to color standard
Colors$Green.Norm.Coral <- Colors$Green.Coral/Colors$Green.Standard #normalize to color standard
Colors$Blue.Norm.Coral <- Colors$Blue.Coral/Colors$Blue.Standard #normalize to color standard
blch.scor <- as.matrix(Colors[,c("Red.Norm.Coral","Green.Norm.Coral","Blue.Norm.Coral")])
rownames(blch.scor) <- Colors$Group #name columns in dataframe
dist <- vegdist(blch.scor, method="euclidean") #calculate distance matrix of color scores
PCA.color <- princomp(dist) #run principal components Analysis
summary(PCA.color) # view variance explained by PCs
Blch <- as.data.frame(PCA.color$scores[,1]) #extract PC1
trts <- unique(Data[,c('TimePoint','Fragment.ID','Treatment')])
Blch <- cbind(Blch, trts[order(trts$Fragment.ID, trts$TimePoint),])
colnames(Blch) <- c("Bleaching.Score", "Timepoint", "Fragment.ID", "Treatment") #name columns
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Photographic_Bleaching.pdf")
par(mar=c(8,5,2,2))
boxplot(Bleaching.Score ~ Treatment*Timepoint, data = Blch, lwd = 1, ylab = 'PC1Color', las=2) #plot boxplot of PC1 color score by Genotype and timepoint
stripchart(Bleaching.Score ~ Treatment*Timepoint, vertical = TRUE, data = Blch,
method = "jitter", add = TRUE, pch = 20, col = 'blue') #include all datapoints in blue overlaid on boxplots
text(x= 0.5, y= max(Blch$Bleaching.Score-0.3), labels= "dark") #add text to indicate dark and pale on graphic
text(x= 0.5, y= min(Blch$Bleaching.Score+0.5), labels= "pale") #add text to indicate dark and pale on graphic
dev.off()
summary(aov(Bleaching.Score ~ Treatment*Timepoint, data=Blch)) #run an ANOVA by Genotype
hist(Blch$Bleaching.Score) #look at normality of data
boxplot(Blch$Bleaching.Score) #look at normality of data
#Title: Bleaching estimates from pictures
#Author: HM Putnam
#Date Last Modified: 20180807
#See Readme file for details
rm(list=ls()) #clears workspace
#Read in required libraries
##### Include Versions of libraries
library("vegan")
#Required Data files
# Set Working Directory:
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working
Data <- read.csv("Color_Score_Data.csv", header=T, sep=",", na.string="NA") #read in data fil
Data <- subset(Data, Date!="20180802")
# Data <- subset(Data, Treatment!="Ambient1")
#Data <- subset(Data, Side=="Front")
#Data <- subset(Data, Side=="Back")
Colors <- as.data.frame(aggregate(Red.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Red.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- Colors[,-c(4,5,7,8, 10,11,13,14,16,17)]
Colors$Group <- paste(Colors$TimePoint, Colors$Fragment.ID)
View(Colors)
#Title: Bleaching estimates from pictures
#Author: HM Putnam
#Date Last Modified: 20180807
#See Readme file for details
rm(list=ls()) #clears workspace
#Read in required libraries
##### Include Versions of libraries
library("vegan")
#Required Data files
# Set Working Directory:
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working
Data <- read.csv("Color_Score_Data.csv", header=T, sep=",", na.string="NA") #read in data fil
Data <- subset(Data, Date!="20180802")
# Data <- subset(Data, Treatment!="Ambient1")
#Data <- subset(Data, Side=="Front")
#Data <- subset(Data, Side=="Back")
Colors <- as.data.frame(aggregate(Red.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
View(Data)
#Title: Bleaching estimates from pictures
#Author: HM Putnam
#Date Last Modified: 20180807
#See Readme file for details
rm(list=ls()) #clears workspace
#Read in required libraries
##### Include Versions of libraries
library("vegan")
#Required Data files
# Set Working Directory:
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working
Data <- read.csv("Color_Score_Data.csv", header=T, sep=",", na.string="NA") #read in data fil
Data <- subset(Data, Date!="20180802")
# Data <- subset(Data, Treatment!="Ambient1")
#Data <- subset(Data, Side=="Front")
#Data <- subset(Data, Side=="Back")
Colors <- as.data.frame(aggregate(Red.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
View(Colors)
#Title: Bleaching estimates from pictures
#Author: HM Putnam
#Date Last Modified: 20180807
#See Readme file for details
rm(list=ls()) #clears workspace
#Read in required libraries
##### Include Versions of libraries
library("vegan")
#Required Data files
# Set Working Directory:
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working
Data <- read.csv("Color_Score_Data.csv", header=T, sep=",", na.string="NA") #read in data fil
Data <- subset(Data, Date!="20180802")
# Data <- subset(Data, Treatment!="Ambient1")
#Data <- subset(Data, Side=="Front")
#Data <- subset(Data, Side=="Back")
Colors <- as.data.frame(aggregate(Red.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Red.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
View(Colors)
#Title: Bleaching estimates from pictures
#Author: HM Putnam
#Date Last Modified: 20180807
#See Readme file for details
rm(list=ls()) #clears workspace
#Read in required libraries
##### Include Versions of libraries
library("vegan")
#Required Data files
# Set Working Directory:
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working
Data <- read.csv("Color_Score_Data.csv", header=T, sep=",", na.string="NA") #read in data fil
Data <- subset(Data, Date!="20180802")
# Data <- subset(Data, Treatment!="Ambient1")
#Data <- subset(Data, Side=="Front")
#Data <- subset(Data, Side=="Back")
Colors <- as.data.frame(aggregate(Red.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Red.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- Colors[,-c(4,5,7,8, 10,11,13,14,16,17)]
Colors$Group <- paste(Colors$TimePoint, Colors$Fragment.ID)
View(Colors)
?order
Colors[order(TimePoint)]
Colors[order(Colors$TimePoint)]
View(Colors)
class(Colors$TimePoint)
Colors[order(as.numeric(Colors$TimePoint))]
#Title: Bleaching estimates from pictures
#Author: HM Putnam
#Date Last Modified: 20180807
#See Readme file for details
rm(list=ls()) #clears workspace
#Read in required libraries
##### Include Versions of libraries
library("vegan")
#Required Data files
# Set Working Directory:
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working
Data <- read.csv("Color_Score_Data.csv", header=T, sep=",", na.string="NA") #read in data fil
Data <- subset(Data, Date!="20180802")
# Data <- subset(Data, Treatment!="Ambient1")
#Data <- subset(Data, Side=="Front")
#Data <- subset(Data, Side=="Back")
Colors <- as.data.frame(aggregate(Red.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Red.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- Colors[,-c(4,5,7,8, 10,11,13,14,16,17)]
Colors$Group <- paste(Colors$TimePoint, Colors$Fragment.ID)
Colors$Red.Norm.Coral <- Colors$Red.Coral/Colors$Red.Standard #normalize to color standard
Colors$Green.Norm.Coral <- Colors$Green.Coral/Colors$Green.Standard #normalize to color standard
Colors$Blue.Norm.Coral <- Colors$Blue.Coral/Colors$Blue.Standard #normalize to color standard
blch.scor <- as.matrix(Colors[,c("Red.Norm.Coral","Green.Norm.Coral","Blue.Norm.Coral")])
rownames(blch.scor) <- Colors$Group #name columns in dataframe
dist <- vegdist(blch.scor, method="euclidean") #calculate distance matrix of color scores
PCA.color <- princomp(dist) #run principal components Analysis
summary(PCA.color) # view variance explained by PCs
Blch <- as.data.frame(PCA.color$scores[,1]) #extract PC1
trts <- unique(Data[,c('TimePoint','Fragment.ID','Treatment')])
Blch <- cbind(Blch, trts[order(trts$Fragment.ID, trts$TimePoint),])
colnames(Blch) <- c("Bleaching.Score", "Timepoint", "Fragment.ID", "Treatment") #name columns
View(Blch)
Blch$Timepoint  = factor(Blch$Timepoint, levels=c("Day1", "Day4", "Day6", "Day8", "Day11"))
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Photographic_Bleaching.pdf")
par(mar=c(8,5,2,2))
boxplot(Bleaching.Score ~ Treatment*Timepoint, data = Blch, lwd = 1, ylab = 'PC1Color', las=2) #plot boxplot of PC1 color score by Genotype and timepoint
stripchart(Bleaching.Score ~ Treatment*Timepoint, vertical = TRUE, data = Blch,
method = "jitter", add = TRUE, pch = 20, col = 'blue') #include all datapoints in blue overlaid on boxplots
text(x= 0.5, y= max(Blch$Bleaching.Score-0.3), labels= "dark") #add text to indicate dark and pale on graphic
text(x= 0.5, y= min(Blch$Bleaching.Score+0.5), labels= "pale") #add text to indicate dark and pale on graphic
dev.off()
#Title: Bleaching estimates from pictures
#Author: HM Putnam
#Date Last Modified: 20180807
#See Readme file for details
rm(list=ls()) #clears workspace
#Read in required libraries
##### Include Versions of libraries
library("vegan")
#Required Data files
# Set Working Directory:
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working
Data <- read.csv("Color_Score_Data.csv", header=T, sep=",", na.string="NA") #read in data fil
Data <- subset(Data, Date!="20180802")
# Data <- subset(Data, Treatment!="Ambient1")
#Data <- subset(Data, Side=="Front")
#Data <- subset(Data, Side=="Back")
Colors <- as.data.frame(aggregate(Red.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Coral~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Red.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Green.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- cbind(Colors, aggregate(Blue.Standard~TimePoint*Fragment.ID, data=Data, FUN=mean))
Colors <- Colors[,-c(4,5,7,8, 10,11,13,14,16,17)]
Colors$Group <- paste(Colors$TimePoint, Colors$Fragment.ID)
Colors$Red.Norm.Coral <- Colors$Red.Coral/Colors$Red.Standard #normalize to color standard
Colors$Green.Norm.Coral <- Colors$Green.Coral/Colors$Green.Standard #normalize to color standard
Colors$Blue.Norm.Coral <- Colors$Blue.Coral/Colors$Blue.Standard #normalize to color standard
blch.scor <- as.matrix(Colors[,c("Red.Norm.Coral","Green.Norm.Coral","Blue.Norm.Coral")])
rownames(blch.scor) <- Colors$Group #name columns in dataframe
dist <- vegdist(blch.scor, method="euclidean") #calculate distance matrix of color scores
PCA.color <- princomp(dist) #run principal components Analysis
summary(PCA.color) # view variance explained by PCs
Blch <- as.data.frame(PCA.color$scores[,1]) #extract PC1
trts <- unique(Data[,c('TimePoint','Fragment.ID','Treatment')])
Blch <- cbind(Blch, trts[order(trts$Fragment.ID, trts$TimePoint),])
colnames(Blch) <- c("Bleaching.Score", "Timepoint", "Fragment.ID", "Treatment") #name columns
Blch$Timepoint  = factor(Blch$Timepoint, levels=c("Day1", "Day4", "Day6", "Day8", "Day11"))
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Photographic_Bleaching.pdf")
par(mar=c(8,5,2,2))
boxplot(Bleaching.Score ~ Treatment*Timepoint, data = Blch, lwd = 1, ylab = 'PC1Color', las=2) #plot boxplot of PC1 color score by Genotype and timepoint
stripchart(Bleaching.Score ~ Treatment*Timepoint, vertical = TRUE, data = Blch,
method = "jitter", add = TRUE, pch = 20, col = 'blue') #include all datapoints in blue overlaid on boxplots
text(x= 0.5, y= max(Blch$Bleaching.Score-0.3), labels= "pale") #add text to indicate dark and pale on graphic
text(x= 0.5, y= min(Blch$Bleaching.Score+0.5), labels= "dark") #add text to indicate dark and pale on graphic
dev.off()
summary(aov(Bleaching.Score ~ Treatment*Timepoint, data=Blch)) #run an ANOVA by Genotype
hist(Blch$Bleaching.Score) #look at normality of data
boxplot(Blch$Bleaching.Score) #look at normality of data
