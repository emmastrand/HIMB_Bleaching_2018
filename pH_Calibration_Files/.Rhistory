Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "grey", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
xmlfile <- xmlParse("http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,9,15, 75, 78, 72, 81, 84, 90)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "grey", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,9,15, 75, 78, 72, 81, 84, 90)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "grey", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Treatment_Measures_Poc1.pdf")
par(mfrow=c(3,2))
plot(SW.chem1$Treatment, SW.chem1$Temperature, xlab="Treatment", ylab="Temperature°C", ylim=c(23,30))
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
##### DISCRETE pH CALCULATIONS #####
path <-("~/MyProjects/HIMB_Bleaching_2018/pH_Calibration_Files/")
file.names<-list.files(path = path, pattern = "csv$") #list all the file names in the folder to get only get the csv files
pH.cals <- data.frame(matrix(NA, nrow=length(file.names), ncol=3, dimnames=list(file.names,c("Date", "Intercept", "Slope")))) #generate a 3 column dataframe with specific column names
for(i in 1:length(file.names)) { # for every file in list start at the first and run this following function
Calib.Data <-read.table(file.path(path,file.names[i]), header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
file.names[i]
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
summary(model)$r.squared
plot(Calib.Data$mVTris, Calib.Data$TTris)
pH.cals[i,2:3] <- coe #inserts them in the dataframe
pH.cals[i,1] <- substr(file.names[i],1,8) #stores the file name in the Date column
}
colnames(pH.cals) <- c("Calib.Date",  "Intercept",  "Slope") #rename columns
pH.cals #view data
#constants for use in pH calculation
R <- 8.31447215 #gas constant in J mol-1 K-1
F <-96485.339924 #Faraday constant in coulombs mol-1
#read in probe measurements of pH, temperature, and salinity from tanks
daily <- read.csv("Daily_Temp_pH_Sal.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
#merge with Seawater chemistry file
SW.chem <- merge(pH.cals, daily, by="Calib.Date")
mvTris <- SW.chem$Temperature*SW.chem$Slope+SW.chem$Intercept #calculate the mV of the tris standard using the temperature mv relationships in the measured standard curves
STris<-35 #salinity of the Tris
phTris<- (11911.08-18.2499*STris-0.039336*STris^2)*(1/(SW.chem$Temperature+273.15))-366.27059+ 0.53993607*STris+0.00016329*STris^2+(64.52243-0.084041*STris)*log(SW.chem$Temperature+273.15)-0.11149858*(SW.chem$Temperature+273.15) #calculate the pH of the tris (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
SW.chem$pH.Total<-phTris+(mvTris/1000-SW.chem$pH.MV/1000)/(R*(SW.chem$Temperature+273.15)*log(10)/F) #calculate the pH on the total scale (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
phTris<- (11911.08-18.2499*STris-0.039336*STris^2)*(1/(SW.chem$Temperature+273.15))-366.27059+ 0.53993607*STris+0.00016329*STris^2+(64.52243-0.084041*STris)*log(SW.chem$Temperature+273.15)-0.11149858*(SW.chem$Temperature+273.15) #calculate the pH of the tris (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
SW.chem$pH.Total<-phTris+(mvTris/1000-SW.chem$pH.MV/1000)/(R*(SW.chem$Temperature+273.15)*log(10)/F) #calculate the pH on the total scale (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Treatment_Measures_Poc1.pdf")
par(mfrow=c(3,2))
plot(SW.chem1$Treatment, SW.chem1$Temperature, xlab="Treatment", ylab="Temperature°C", ylim=c(23,30))
plot(SW.chem1$Treatment, SW.chem1$pH.Total, xlab="Treatment", ylab="pH Total Scale", ylim=c(7.0,8.2))
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Treatment_Measures_Poc1.pdf")
par(mfrow=c(3,2))
plot(SW.chem1$Treatment, SW.chem$Temperature, xlab="Treatment", ylab="Temperature°C", ylim=c(23,30))
plot(SW.chem1$Treatment, SW.chem$pH.Total, xlab="Treatment", ylab="pH Total Scale", ylim=c(7.0,8.2))
plot(SW.chem1$Treatment, SW.chem$Salinity, xlab="Treatment", ylab="Salinity psu", ylim=c(30,37))
rm(list=ls()) # removes all prior objects
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
##### DISCRETE pH CALCULATIONS #####
path <-("~/MyProjects/HIMB_Bleaching_2018/pH_Calibration_Files/")
file.names<-list.files(path = path, pattern = "csv$") #list all the file names in the folder to get only get the csv files
pH.cals <- data.frame(matrix(NA, nrow=length(file.names), ncol=3, dimnames=list(file.names,c("Date", "Intercept", "Slope")))) #generate a 3 column dataframe with specific column names
for(i in 1:length(file.names)) { # for every file in list start at the first and run this following function
Calib.Data <-read.table(file.path(path,file.names[i]), header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
file.names[i]
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
summary(model)$r.squared
plot(Calib.Data$mVTris, Calib.Data$TTris)
pH.cals[i,2:3] <- coe #inserts them in the dataframe
pH.cals[i,1] <- substr(file.names[i],1,8) #stores the file name in the Date column
}
colnames(pH.cals) <- c("Calib.Date",  "Intercept",  "Slope") #rename columns
pH.cals #view data
#constants for use in pH calculation
R <- 8.31447215 #gas constant in J mol-1 K-1
F <-96485.339924 #Faraday constant in coulombs mol-1
#read in probe measurements of pH, temperature, and salinity from tanks
daily <- read.csv("Daily_Temp_pH_Sal.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
#merge with Seawater chemistry file
SW.chem <- merge(pH.cals, daily, by="Calib.Date")
mvTris <- SW.chem$Temperature*SW.chem$Slope+SW.chem$Intercept #calculate the mV of the tris standard using the temperature mv relationships in the measured standard curves
STris<-35 #salinity of the Tris
phTris<- (11911.08-18.2499*STris-0.039336*STris^2)*(1/(SW.chem$Temperature+273.15))-366.27059+ 0.53993607*STris+0.00016329*STris^2+(64.52243-0.084041*STris)*log(SW.chem$Temperature+273.15)-0.11149858*(SW.chem$Temperature+273.15) #calculate the pH of the tris (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
SW.chem$pH.Total<-phTris+(mvTris/1000-SW.chem$pH.MV/1000)/(R*(SW.chem$Temperature+273.15)*log(10)/F) #calculate the pH on the total scale (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Treatment_Measures_Poc1.pdf")
par(mfrow=c(3,2))
plot(SW.chem1$Treatment, SW.chem$Temperature, xlab="Treatment", ylab="Temperature°C", ylim=c(23,30))
rm(list=ls()) # removes all prior objects
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
##### DISCRETE pH CALCULATIONS #####
path <-("~/MyProjects/HIMB_Bleaching_2018/pH_Calibration_Files/")
file.names<-list.files(path = path, pattern = "csv$") #list all the file names in the folder to get only get the csv files
pH.cals <- data.frame(matrix(NA, nrow=length(file.names), ncol=3, dimnames=list(file.names,c("Date", "Intercept", "Slope")))) #generate a 3 column dataframe with specific column names
for(i in 1:length(file.names)) { # for every file in list start at the first and run this following function
Calib.Data <-read.table(file.path(path,file.names[i]), header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
file.names[i]
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
summary(model)$r.squared
plot(Calib.Data$mVTris, Calib.Data$TTris)
pH.cals[i,2:3] <- coe #inserts them in the dataframe
pH.cals[i,1] <- substr(file.names[i],1,8) #stores the file name in the Date column
}
colnames(pH.cals) <- c("Calib.Date",  "Intercept",  "Slope") #rename columns
pH.cals #view data
#constants for use in pH calculation
R <- 8.31447215 #gas constant in J mol-1 K-1
F <-96485.339924 #Faraday constant in coulombs mol-1
#read in probe measurements of pH, temperature, and salinity from tanks
daily <- read.csv("Daily_Temp_pH_Sal.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
#merge with Seawater chemistry file
SW.chem <- merge(pH.cals, daily, by="Calib.Date")
mvTris <- SW.chem$Temperature*SW.chem$Slope+SW.chem$Intercept #calculate the mV of the tris standard using the temperature mv relationships in the measured standard curves
STris<-35 #salinity of the Tris
phTris<- (11911.08-18.2499*STris-0.039336*STris^2)*(1/(SW.chem$Temperature+273.15))-366.27059+ 0.53993607*STris+0.00016329*STris^2+(64.52243-0.084041*STris)*log(SW.chem$Temperature+273.15)-0.11149858*(SW.chem$Temperature+273.15) #calculate the pH of the tris (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
SW.chem$pH.Total<-phTris+(mvTris/1000-SW.chem$pH.MV/1000)/(R*(SW.chem$Temperature+273.15)*log(10)/F) #calculate the pH on the total scale (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Treatment_Measures_Poc1.pdf")
par(mfrow=c(3,2))
plot(SW.chem$Treatment, SW.chem$Temperature, xlab="Treatment", ylab="Temperature°C", ylim=c(23,30))
plot(SW.chem$Treatment, SW.chem$pH.Total, xlab="Treatment", ylab="pH Total Scale", ylim=c(7.0,8.2))
plot(SW.chem$Treatment, SW.chem$Salinity, xlab="Treatment", ylab="Salinity psu", ylim=c(30,37))
dev.off()
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Tank_Measures_Poc1.pdf")
par(mfrow=c(1,3))
plot(SW.chem$Sample.ID, SW.chem$Temperature, xlab="Tank", ylab="Temperature°C", ylim=c(23,30),las=2)
plot(SW.chem$Sample.ID, SW.chem$pH.Total, xlab="Tank", ylab="pH Total Scale", ylim=c(7.0,8.2),las=2)
plot(SW.chem$Sample.ID, SW.chem$Salinity, xlab="Tank", ylab="Salinity psu", ylim=c(30,37),las=2)
dev.off()
rm(list=ls()) # removes all prior objects
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
##### DISCRETE pH CALCULATIONS #####
path <-("~/MyProjects/HIMB_Bleaching_2018/pH_Calibration_Files/")
file.names<-list.files(path = path, pattern = "csv$") #list all the file names in the folder to get only get the csv files
pH.cals <- data.frame(matrix(NA, nrow=length(file.names), ncol=3, dimnames=list(file.names,c("Date", "Intercept", "Slope")))) #generate a 3 column dataframe with specific column names
for(i in 1:length(file.names)) { # for every file in list start at the first and run this following function
Calib.Data <-read.table(file.path(path,file.names[i]), header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
file.names[i]
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
summary(model)$r.squared
plot(Calib.Data$mVTris, Calib.Data$TTris)
pH.cals[i,2:3] <- coe #inserts them in the dataframe
pH.cals[i,1] <- substr(file.names[i],1,8) #stores the file name in the Date column
}
colnames(pH.cals) <- c("Calib.Date",  "Intercept",  "Slope") #rename columns
pH.cals #view data
#constants for use in pH calculation
R <- 8.31447215 #gas constant in J mol-1 K-1
F <-96485.339924 #Faraday constant in coulombs mol-1
#read in probe measurements of pH, temperature, and salinity from tanks
daily <- read.csv("Daily_Temp_pH_Sal.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
#merge with Seawater chemistry file
SW.chem <- merge(pH.cals, daily, by="Calib.Date")
mvTris <- SW.chem$Temperature*SW.chem$Slope+SW.chem$Intercept #calculate the mV of the tris standard using the temperature mv relationships in the measured standard curves
STris<-35 #salinity of the Tris
phTris<- (11911.08-18.2499*STris-0.039336*STris^2)*(1/(SW.chem$Temperature+273.15))-366.27059+ 0.53993607*STris+0.00016329*STris^2+(64.52243-0.084041*STris)*log(SW.chem$Temperature+273.15)-0.11149858*(SW.chem$Temperature+273.15) #calculate the pH of the tris (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
SW.chem$pH.Total<-phTris+(mvTris/1000-SW.chem$pH.MV/1000)/(R*(SW.chem$Temperature+273.15)*log(10)/F) #calculate the pH on the total scale (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Treatment_Measures.pdf")
par(mfrow=c(3,2))
plot(SW.chem$Treatment, SW.chem$Temperature, xlab="Treatment", ylab="Temperature°C", ylim=c(23,30))
plot(SW.chem$Treatment, SW.chem$pH.Total, xlab="Treatment", ylab="pH Total Scale", ylim=c(7.0,8.2))
plot(SW.chem$Treatment, SW.chem$Salinity, xlab="Treatment", ylab="Salinity psu", ylim=c(30,37))
dev.off()
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Tank_Measures.pdf")
par(mfrow=c(1,3))
plot(SW.chem$Sample.ID, SW.chem$Temperature, xlab="Tank", ylab="Temperature°C", ylim=c(23,30),las=2)
plot(SW.chem$Sample.ID, SW.chem$pH.Total, xlab="Tank", ylab="pH Total Scale", ylim=c(7.0,8.2),las=2)
plot(SW.chem$Sample.ID, SW.chem$Salinity, xlab="Tank", ylab="Salinity psu", ylim=c(30,37),las=2)
dev.off()
rm(list=ls()) # removes all prior objects
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
##### DISCRETE pH CALCULATIONS #####
path <-("~/MyProjects/HIMB_Bleaching_2018/pH_Calibration_Files/")
file.names<-list.files(path = path, pattern = "csv$") #list all the file names in the folder to get only get the csv files
pH.cals <- data.frame(matrix(NA, nrow=length(file.names), ncol=3, dimnames=list(file.names,c("Date", "Intercept", "Slope")))) #generate a 3 column dataframe with specific column names
for(i in 1:length(file.names)) { # for every file in list start at the first and run this following function
Calib.Data <-read.table(file.path(path,file.names[i]), header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
file.names[i]
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
summary(model)$r.squared
plot(Calib.Data$mVTris, Calib.Data$TTris)
pH.cals[i,2:3] <- coe #inserts them in the dataframe
pH.cals[i,1] <- substr(file.names[i],1,8) #stores the file name in the Date column
}
colnames(pH.cals) <- c("Calib.Date",  "Intercept",  "Slope") #rename columns
pH.cals #view data
#constants for use in pH calculation
R <- 8.31447215 #gas constant in J mol-1 K-1
F <-96485.339924 #Faraday constant in coulombs mol-1
#read in probe measurements of pH, temperature, and salinity from tanks
daily <- read.csv("Daily_Temp_pH_Sal.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
#merge with Seawater chemistry file
SW.chem <- merge(pH.cals, daily, by="Calib.Date")
mvTris <- SW.chem$Temperature*SW.chem$Slope+SW.chem$Intercept #calculate the mV of the tris standard using the temperature mv relationships in the measured standard curves
STris<-35 #salinity of the Tris
phTris<- (11911.08-18.2499*STris-0.039336*STris^2)*(1/(SW.chem$Temperature+273.15))-366.27059+ 0.53993607*STris+0.00016329*STris^2+(64.52243-0.084041*STris)*log(SW.chem$Temperature+273.15)-0.11149858*(SW.chem$Temperature+273.15) #calculate the pH of the tris (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
SW.chem$pH.Total<-phTris+(mvTris/1000-SW.chem$pH.MV/1000)/(R*(SW.chem$Temperature+273.15)*log(10)/F) #calculate the pH on the total scale (Dickson A. G., Sabine C. L. and Christian J. R., SOP 6a)
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Treatment_Measures.pdf")
par(mfrow=c(3,2))
plot(SW.chem$Treatment, SW.chem$Temperature, xlab="Treatment", ylab="Temperature°C", ylim=c(23,33))
plot(SW.chem$Treatment, SW.chem$pH.Total, xlab="Treatment", ylab="pH Total Scale", ylim=c(7.0,8.2))
plot(SW.chem$Treatment, SW.chem$Salinity, xlab="Treatment", ylab="Salinity psu", ylim=c(30,37))
dev.off()
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Daily_Tank_Measures.pdf")
par(mfrow=c(1,3))
plot(SW.chem$Sample.ID, SW.chem$Temperature, xlab="Tank", ylab="Temperature°C", ylim=c(23,33),las=2)
plot(SW.chem$Sample.ID, SW.chem$pH.Total, xlab="Tank", ylab="pH Total Scale", ylim=c(7.0,8.2),las=2)
plot(SW.chem$Sample.ID, SW.chem$Salinity, xlab="Tank", ylab="Salinity psu", ylim=c(30,37),las=2)
dev.off()
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,9,15, 75, 78, 72, 81, 84, 90)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,75)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,9)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,9,15, 75, 78, 72, 81, 84, 90)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_XL", "pH_XL", "Salt_XL", "Tmp_L", "pH_L", "Salt_L","Tmp_A", "pH_A", "Salt_A")  #rename columns
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,9)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
write.csv(Apex.Data2, "Apex_Data_All.csv", row.names=FALSE)
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,9)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
write.csv(Apex.Data2, "Apex_Data_All.csv", row.names=FALSE)
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,69)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Data_Output.csv") #write file to save data
write.csv(Apex.Data2, "Apex_Data_All.csv", row.names=FALSE)
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 30),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 34),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_All.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_Output.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("/Output/Apex_Data_Output.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
write.csv(Apex.Data2, "Apex_Data_All.csv", row.names=FALSE) # use this to check which columns desired for Apex_Data_Output.csv
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,69)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 34),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_Output.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
#http://166.122.78.194:80/cgi-bin/datalog.xml?sdate=1806030000&days=2
#http://www.informit.com/articles/article.aspx?p=2215520
library("XML")
library("plyr")
#############################################################
setwd("~/MyProjects/HIMB_Bleaching_2018/") #set working directory
#############################################################
xmlfile <- xmlParse("http://166.122.78.55:80/cgi-bin/datalog.xml?sdate=1808090000&days=4") #read in the date (180620) plus # days (days=4) of Apex data
Apex.Data <- ldply(xmlToList(xmlfile), data.frame) #convert xml to dataframe
Apex.Data2 <- Apex.Data[4:nrow(Apex.Data),] #remove extra metadata from top
Apex.Data2 <- head(Apex.Data2,-2) #remove extra metadata from bottom
write.csv(Apex.Data2, "Apex_Data_All.csv", row.names=FALSE) # use this to check which columns desired for Apex_Data_Output.csv
#keep columnes with data of interest. This needs to be changed as it will be specific to the Apex configuration
Probe.Data <- Apex.Data2[,c(3,6,69)] #select columns
colnames(Probe.Data ) <- c("Date.Time", "Tmp_H1", "Tmp_H2")  #rename columns
Probe.Data$Date.Time <- as.POSIXct(Probe.Data$Date.Time, format = "%m/%d/%Y %H:%M:%S", tz="HST") #convert date to HI time
write.csv(Probe.Data, "~/MyProjects/HIMB_Bleaching_2018/Apex_Data_Output.csv") #write file to save data
#plot Temp and pH and save to output
pdf("~/MyProjects/HIMB_Bleaching_2018/Output/Apex_Output.pdf")
par(mfrow=c(2,1))
plot(as.numeric(as.character(Tmp_H1)) ~ Date.Time, Probe.Data, col = "blue", type="l", ylim=c(25.5, 34),  xlab="Time", ylab="Temperature °C")
lines(as.numeric(as.character(Tmp_H2)) ~ Date.Time, Probe.Data, col = "red")
axis.POSIXct(side=1, Probe.Data$Date.Time)
All.Data <- read.csv("Apex_Data_Output.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE)
All.Data$Date.Time <- as.POSIXct(All.Data$Date.Time, format = "%m/%d/%Y %H:%M", tz="HST") #convert date to HI time
setwd("~/MyProjects/HIMB_Bleaching_2018/pH_Calibration_Files/") #set working directory
Calib.Data <-read.table("20180812.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
R2<-summary(model)$r.squared
plot(mVTris ~ TTris, data=Calib.Data)
abline(lm(mVTris ~ TTris, data=Calib.Data))
legend('topleft', legend = bquote(R^2 == .(format(R2, digits = 3))), bty='n')
setwd("~/MyProjects/HIMB_Bleaching_2018/pH_Calibration_Files/") #set working directory
Calib.Data <-read.table("20180812.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
R2<-summary(model)$r.squared
plot(mVTris ~ TTris, data=Calib.Data)
abline(lm(mVTris ~ TTris, data=Calib.Data))
legend('topleft', legend = bquote(R^2 == .(format(R2, digits = 3))), bty='n')
